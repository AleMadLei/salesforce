<?php

/**
 * Implements hook_requirements().
 */
function salesforce_mapping_requirements($phase) {
  $requirements = array();
  $t = get_t();
  switch($phase) {
    case 'install':
      backdrop_set_message(t('At least one sync method (Push or Pull) must be <a href="/admin/modules">enabled</a> to configure Salesforce Mappings.'), 'status', FALSE);
      break;
    case 'runtime':
      if (!module_exists('salesforce_pull') && !module_exists('salesforce_push')) {
        $requirements['salesforce_mapping'] = array(
          'title' => $t('Salesforce Mapping'),
          'description' => $t('<a href="/admin/modules">Enable</a> at least one sync method (Push or Pull) to configure Salesforce Mappings.'),
          'severity' => REQUIREMENT_ERROR,
        );
      }
      break;
  }
  return $requirements;
}

/**
 * @file
 * Install and uninstall instructions for salesforce_mapping.
 */

/**
 * Implements hook_schema().
 */
function salesforce_mapping_schema() {

  // Salesforce mapping table.
  $schema['salesforce_mapping'] = array(
    'description' => 'Backdrop to Salesforce mappings',
    'fields' => array(
      'salesforce_mapping_id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique salesforce_mapping entity ID.',
      ),
      'name' => array(
        'description' => 'The machine-readable name of this salesforce_mapping type.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ),
      'label' => array(
        'description' => 'The human-readable name of this salesforce_mapping type.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'The type/bundle of this salesforce_mapping.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'sync_triggers' => array(
        'description' => 'Indicates when the sync should take place.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0x0000,
        'size' => 'tiny',
      ),
      'salesforce_object_type' => array(
        'description' => 'The Salesforce object type for this mapping.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'salesforce_record_types_allowed' => array(
        'description' => 'The Salesforce record types available for this mapping.',
        'type' => 'blob',
        'size' => 'big',
        'serialize' => TRUE,
      ),
      'salesforce_record_type_default' => array(
        'description' => 'The default Salesforce record type for this mapping.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'backdrop_entity_type' => array(
        'description' => 'The Backdrop entity type for this mapping (e.g. "node", "user").',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ),
      'backdrop_bundle' => array(
        'description' => 'The Backdrop bundle for this mapping (e.g. "page", "user")',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ),
      'dedupe_key' => array(
        'description' => 'The SF field to be used as primary key for upserts',
        'type' => 'varchar',
        'length' => '128',
        'not null' => TRUE,
        'default' => '',
      ),
      'field_mappings' => array(
        'type' => 'text',
        'serialize' => TRUE,
        'size' => 'big',
        'description' => 'A serialized object that stores the field mappings.',
      ),
      'pull_trigger_date' => array(
        'description' => 'The Saleforce field to trigger pulls from.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => 'LastModifiedDate',
      ),
      'push_async' => array(
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Indicates this mapping should be processed asynchronously.',
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the salesforce_mapping was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'weight' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
        'description' => 'The weight of this salesforce_mapping type in relation to others.',
      ),
      // Following fields are for supporting exportable status.
      'locked' => array(
        'description' => 'A boolean indicating whether the administrator may delete this mapping.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
      ),
      'status' => array(
        'type' => 'int',
        'not null' => TRUE,
        // Set the default to ENTITY_CUSTOM without using the constant as it is
        // not safe to use it at this point.
        'default' => 0x01,
        'size' => 'tiny',
        'description' => 'The exportable status of the entity.',
      ),
      'module' => array(
        'description' => 'The name of the providing module if the entity has been defined in code.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('salesforce_mapping_id'),
    'unique keys' => array(
      'name' => array('name'),
    ),
    'indexes' => array(
      'name_sf_type_backdrop_type' => array(
        'backdrop_entity_type',
        'backdrop_bundle',
        'salesforce_object_type',
      ),
    ),
  );

  // Object mapping table.
  $schema['salesforce_mapping_object'] = array(
    'description' => 'Backdrop to Salesforce object mappings',
    'fields' => array(
      'salesforce_mapping_object_id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique salesforce_mapping_object entity ID.',
      ),
      'revision_id' => array(
        'description' => 'The current {salesforce_mapping_object_revision}.revision_id version identifier.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'salesforce_id' => array(
        'description' => 'Salesforce object identifier',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'entity_id' => array(
        'description' => 'Backdrop entity Id.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'entity_type' => array(
        'description' => 'Backdrop entity type.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the object mapping was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'entity_updated' => array(
        'description' => 'The Unix timestamp when the mapped Backdrop entity was last updated.',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 0,
      ),
      'last_sync' => array(
        'description' => 'The Unix timestamp when the record was last synced with Salesforce.',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 0,
      ),
      'last_sync_action' => array(
        'description' => 'The last sync action (typically push or pull).',
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
      ),
      'last_sync_status' => array(
        'description' => 'The last sync status.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
        'unsigned' => TRUE,
      ),
      'last_sync_message' => array(
        'description' => 'The message returned from the last sync activity',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('salesforce_mapping_object_id'),
    'indexes' => array(
      'backdrop_entity' => array('entity_type', 'entity_id'),
      'salesforce_object' => array('salesforce_id'),
      'salesforce_mapping_object_revision' => array('revision_id'),
    ),
    'unique keys' => array(
      'salesforce' => array('salesforce_id'),
      'salesforce_backdrop' => array('entity_type', 'entity_id'),
      'revision_id' => array('revision_id'),
    ),
    'foreign keys' => array(
      'salesforce_mapping_object_revision' => array(
        'table' => 'salesforce_mapping_object_revision',
        'columns' => array('revision_id' => 'revision_id'),
      ),
    ),
  );

  $schema['salesforce_mapping_object_revision'] = array(
    'description' => 'Stores information about each saved version of a {salesforce_mapping_object}.',
    'fields' => array(
      'salesforce_mapping_object_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Primary Key: Unique salesforce_mapping_object entity ID.',
      ),
      'revision_id' => array(
        'description' => 'The current {salesforce_mapping_object_revision}.revision_id version identifier.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'salesforce_id' => array(
        'description' => 'Salesforce object identifier',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'entity_id' => array(
        'description' => 'Backdrop entity Id.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'entity_type' => array(
        'description' => 'Backdrop entity type.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the object mapping was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'entity_updated' => array(
        'description' => 'The Unix timestamp when the mapped Backdrop entity was last updated.',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 0,
      ),
      'last_sync' => array(
        'description' => 'The Unix timestamp when the record was last synced with Salesforce.',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 0,
      ),
      'last_sync_action' => array(
        'description' => 'The last sync action (typically push or pull).',
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
      ),
      'last_sync_status' => array(
        'description' => 'The last sync status.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 1, // 1 = Success
        'unsigned' => TRUE,
      ),
      'last_sync_message' => array(
        'description' => 'The message returned from the last sync activity',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('revision_id'),
    'indexes' => array(
      'backdrop_entity' => array('entity_type', 'entity_id'),
      'salesforce_object' => array('salesforce_id'),
      'salesforce_mapping_object_id' => array('salesforce_mapping_object_id'),
    ),
    'foreign keys' => array(
      'salesforce_mapping_object' => array(
        'table' => 'salesforce_mapping_object',
        'columns' => array('salesforce_mapping_object_id' => 'salesforce_mapping_object_id'),
      ),
    ),
  );

  return $schema;
}

/**
 * Implements hook_update_last_removed().
 */
function salesforce_mapping_update_last_removed() {
  return 7308;
}
