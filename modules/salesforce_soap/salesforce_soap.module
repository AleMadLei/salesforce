<?php

/**
 * @file
 * Initialize SOAP client.
 */

/**
 * Implements hook_init().
 */
function salesforce_soap_init() {
  libraries_load('salesforce');
}

/**
 * Implements hook_libraries_info().
 */
function salesforce_soap_libraries_info() {
  return array(
    'salesforce' => array(
      'name' => 'salesforce',
      'version callback' => 'salesforce_soap_libraries_version_callback',
      'path' => 'soapclient',
      'vendor url' => 'https://github.com/developerforce/Force.com-Toolkit-for-PHP/',
      'download url' => 'https://github.com/developerforce/Force.com-Toolkit-for-PHP/archive/master.zip',
      'files' => array(
        'php' => array(
          'SforcePartnerClient.php',
        ),
      ),
    ),
  );
}

/**
 * Dummy version callback for hook_libraries_info
 */
function salesforce_soap_libraries_version_callback() {
  return TRUE;
}


/**
 * Implements hook_config_info().
 */
function salesforce_soap_config_info() {
  $prefixes['salesforce_soap.settings'] = array(
    'label' => t('Salesforce API settings'),
    'group' => t('Configuration'),
  );
  return $prefixes;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function salesforce_soap_form_salesforce_settings_form_alter(&$form, &$form_state, $form_id) {
  $config = config('salesforce_soap.settings');
  $form['salesforce_soap_batch_enable'] = array(
    '#title' => t('Batch records'),
    '#type' => 'checkbox',
    '#default_value' => $config->get('salesforce_soap_batch_enable'),
    '#description' => t('If a mapping has "Process asynchronously" checked, all its items will be processed in a single batch to the Salesforce API rather than one at a time. This may be preferable if API limits are of concern, although changes are not reflected immediately in Salesforce.'),
  );
}

/**
 * Implements hook_autoload_info().
 */
function salesforce_soap_autoload_info() {
  return array(
    'SalesforceSoapPartner' => 'salesforce_soap.inc',
  );
}
